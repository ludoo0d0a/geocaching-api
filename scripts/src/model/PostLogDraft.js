/**
 * API v1.0
 * API version 1.0.
 *
 * The version of the OpenAPI document: v1
 * Contact: apihelp@geocaching.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GeocacheLogType from './GeocacheLogType';

/**
 * The PostLogDraft model module.
 * @module model/PostLogDraft
 * @version v1
 */
class PostLogDraft {
    /**
     * Constructs a new <code>PostLogDraft</code>.
     * @alias module:model/PostLogDraft
     * @param geocacheCode {String} 
     */
    constructor(geocacheCode) { 
        
        PostLogDraft.initialize(this, geocacheCode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, geocacheCode) { 
        obj['geocacheCode'] = geocacheCode;
    }

    /**
     * Constructs a <code>PostLogDraft</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostLogDraft} obj Optional instance to populate.
     * @return {module:model/PostLogDraft} The populated <code>PostLogDraft</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostLogDraft();

            if (data.hasOwnProperty('geocacheCode')) {
                obj['geocacheCode'] = ApiClient.convertToType(data['geocacheCode'], 'String');
            }
            if (data.hasOwnProperty('geocacheLogType')) {
                obj['geocacheLogType'] = GeocacheLogType.constructFromObject(data['geocacheLogType']);
            }
            if (data.hasOwnProperty('guid')) {
                obj['guid'] = ApiClient.convertToType(data['guid'], 'String');
            }
            if (data.hasOwnProperty('logType')) {
                obj['logType'] = ApiClient.convertToType(data['logType'], 'String');
            }
            if (data.hasOwnProperty('loggedDate')) {
                obj['loggedDate'] = ApiClient.convertToType(data['loggedDate'], 'Date');
            }
            if (data.hasOwnProperty('loggedDateUtc')) {
                obj['loggedDateUtc'] = ApiClient.convertToType(data['loggedDateUtc'], 'Date');
            }
            if (data.hasOwnProperty('note')) {
                obj['note'] = ApiClient.convertToType(data['note'], 'String');
            }
            if (data.hasOwnProperty('useFavoritePoint')) {
                obj['useFavoritePoint'] = ApiClient.convertToType(data['useFavoritePoint'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {String} geocacheCode
 */
PostLogDraft.prototype['geocacheCode'] = undefined;

/**
 * @member {module:model/GeocacheLogType} geocacheLogType
 */
PostLogDraft.prototype['geocacheLogType'] = undefined;

/**
 * @member {String} guid
 */
PostLogDraft.prototype['guid'] = undefined;

/**
 * @member {String} logType
 */
PostLogDraft.prototype['logType'] = undefined;

/**
 * @member {Date} loggedDate
 */
PostLogDraft.prototype['loggedDate'] = undefined;

/**
 * @member {Date} loggedDateUtc
 */
PostLogDraft.prototype['loggedDateUtc'] = undefined;

/**
 * @member {String} note
 */
PostLogDraft.prototype['note'] = undefined;

/**
 * @member {Boolean} useFavoritePoint
 */
PostLogDraft.prototype['useFavoritePoint'] = undefined;






export default PostLogDraft;

