/**
 * API v1.0
 * API version 1.0.
 *
 * The version of the OpenAPI document: v1
 * Contact: apihelp@geocaching.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Coordinates from './Coordinates';
import Sponsor from './Sponsor';

/**
 * The GeoTour model module.
 * @module model/GeoTour
 * @version v1
 */
class GeoTour {
    /**
     * Constructs a new <code>GeoTour</code>.
     * @alias module:model/GeoTour
     */
    constructor() { 
        
        GeoTour.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GeoTour</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GeoTour} obj Optional instance to populate.
     * @return {module:model/GeoTour} The populated <code>GeoTour</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GeoTour();

            if (data.hasOwnProperty('coverImageUrl')) {
                obj['coverImageUrl'] = ApiClient.convertToType(data['coverImageUrl'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('favoritePoints')) {
                obj['favoritePoints'] = ApiClient.convertToType(data['favoritePoints'], 'Number');
            }
            if (data.hasOwnProperty('geocacheCount')) {
                obj['geocacheCount'] = ApiClient.convertToType(data['geocacheCount'], 'Number');
            }
            if (data.hasOwnProperty('logoImageUrl')) {
                obj['logoImageUrl'] = ApiClient.convertToType(data['logoImageUrl'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('postedCoordinates')) {
                obj['postedCoordinates'] = Coordinates.constructFromObject(data['postedCoordinates']);
            }
            if (data.hasOwnProperty('referenceCode')) {
                obj['referenceCode'] = ApiClient.convertToType(data['referenceCode'], 'String');
            }
            if (data.hasOwnProperty('sponsor')) {
                obj['sponsor'] = Sponsor.constructFromObject(data['sponsor']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} coverImageUrl
 */
GeoTour.prototype['coverImageUrl'] = undefined;

/**
 * @member {String} description
 */
GeoTour.prototype['description'] = undefined;

/**
 * @member {Number} favoritePoints
 */
GeoTour.prototype['favoritePoints'] = undefined;

/**
 * @member {Number} geocacheCount
 */
GeoTour.prototype['geocacheCount'] = undefined;

/**
 * @member {String} logoImageUrl
 */
GeoTour.prototype['logoImageUrl'] = undefined;

/**
 * @member {String} name
 */
GeoTour.prototype['name'] = undefined;

/**
 * @member {module:model/Coordinates} postedCoordinates
 */
GeoTour.prototype['postedCoordinates'] = undefined;

/**
 * @member {String} referenceCode
 */
GeoTour.prototype['referenceCode'] = undefined;

/**
 * @member {module:model/Sponsor} sponsor
 */
GeoTour.prototype['sponsor'] = undefined;

/**
 * @member {String} url
 */
GeoTour.prototype['url'] = undefined;






export default GeoTour;

