/**
 * API v1.0
 * API version 1.0.
 *
 * The version of the OpenAPI document: v1
 * Contact: apihelp@geocaching.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Coordinates from './Coordinates';
import GeocacheLogType from './GeocacheLogType';

/**
 * The PostGeocacheLog model module.
 * @module model/PostGeocacheLog
 * @version v1
 */
class PostGeocacheLog {
    /**
     * Constructs a new <code>PostGeocacheLog</code>.
     * @alias module:model/PostGeocacheLog
     * @param geocacheCode {String} 
     * @param loggedDate {Date} 
     * @param text {String} 
     */
    constructor(geocacheCode, loggedDate, text) { 
        
        PostGeocacheLog.initialize(this, geocacheCode, loggedDate, text);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, geocacheCode, loggedDate, text) { 
        obj['geocacheCode'] = geocacheCode;
        obj['loggedDate'] = loggedDate;
        obj['text'] = text;
    }

    /**
     * Constructs a <code>PostGeocacheLog</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostGeocacheLog} obj Optional instance to populate.
     * @return {module:model/PostGeocacheLog} The populated <code>PostGeocacheLog</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostGeocacheLog();

            if (data.hasOwnProperty('geocacheCode')) {
                obj['geocacheCode'] = ApiClient.convertToType(data['geocacheCode'], 'String');
            }
            if (data.hasOwnProperty('geocacheLogType')) {
                obj['geocacheLogType'] = GeocacheLogType.constructFromObject(data['geocacheLogType']);
            }
            if (data.hasOwnProperty('loggedDate')) {
                obj['loggedDate'] = ApiClient.convertToType(data['loggedDate'], 'Date');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('updatedCoordinates')) {
                obj['updatedCoordinates'] = Coordinates.constructFromObject(data['updatedCoordinates']);
            }
            if (data.hasOwnProperty('usedFavoritePoint')) {
                obj['usedFavoritePoint'] = ApiClient.convertToType(data['usedFavoritePoint'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {String} geocacheCode
 */
PostGeocacheLog.prototype['geocacheCode'] = undefined;

/**
 * @member {module:model/GeocacheLogType} geocacheLogType
 */
PostGeocacheLog.prototype['geocacheLogType'] = undefined;

/**
 * @member {Date} loggedDate
 */
PostGeocacheLog.prototype['loggedDate'] = undefined;

/**
 * @member {String} text
 */
PostGeocacheLog.prototype['text'] = undefined;

/**
 * @member {String} type
 */
PostGeocacheLog.prototype['type'] = undefined;

/**
 * @member {module:model/Coordinates} updatedCoordinates
 */
PostGeocacheLog.prototype['updatedCoordinates'] = undefined;

/**
 * @member {Boolean} usedFavoritePoint
 */
PostGeocacheLog.prototype['usedFavoritePoint'] = undefined;






export default PostGeocacheLog;

