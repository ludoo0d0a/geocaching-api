/**
 * API v1.0
 * API version 1.0.
 *
 * The version of the OpenAPI document: 1.0.0-oas3
 * Contact: apihelp@geocaching.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Utilities service.
* @module api/UtilitiesApi
* @version 1.0.0-oas3
*/
export default class UtilitiesApi {

    /**
    * Constructs a new UtilitiesApi. 
    * @alias module:api/UtilitiesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the utilitiesGetReferenceCode operation.
     * @callback module:api/UtilitiesApi~utilitiesGetReferenceCodeCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the reference code from an id
     * @param {Number} id the id to get the reference code for
     * @param {String} codePrefix the prefix of the reference code (e.g. GC)
     * @param {String} apiVersion The requested API version
     * @param {module:api/UtilitiesApi~utilitiesGetReferenceCodeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    utilitiesGetReferenceCode(id, codePrefix, apiVersion, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling utilitiesGetReferenceCode");
      }
      // verify the required parameter 'codePrefix' is set
      if (codePrefix === undefined || codePrefix === null) {
        throw new Error("Missing the required parameter 'codePrefix' when calling utilitiesGetReferenceCode");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling utilitiesGetReferenceCode");
      }

      let pathParams = {
        'api-version': apiVersion
      };
      let queryParams = {
        'id': id,
        'codePrefix': codePrefix
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/json-patch+json'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/v{api-version}/utilities/referencecode', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
