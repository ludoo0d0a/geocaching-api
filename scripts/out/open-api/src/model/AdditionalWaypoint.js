/**
 * API v1.0
 * API version 1.0.
 *
 * The version of the OpenAPI document: 1.0.0-oas3
 * Contact: apihelp@geocaching.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Coordinates from './Coordinates';

/**
 * The AdditionalWaypoint model module.
 * @module model/AdditionalWaypoint
 * @version 1.0.0-oas3
 */
class AdditionalWaypoint {
    /**
     * Constructs a new <code>AdditionalWaypoint</code>.
     * @alias module:model/AdditionalWaypoint
     */
    constructor() { 
        
        AdditionalWaypoint.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdditionalWaypoint</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdditionalWaypoint} obj Optional instance to populate.
     * @return {module:model/AdditionalWaypoint} The populated <code>AdditionalWaypoint</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdditionalWaypoint();

            if (data.hasOwnProperty('referenceCode')) {
                obj['referenceCode'] = ApiClient.convertToType(data['referenceCode'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('coordinates')) {
                obj['coordinates'] = Coordinates.constructFromObject(data['coordinates']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('typeId')) {
                obj['typeId'] = ApiClient.convertToType(data['typeId'], 'Number');
            }
            if (data.hasOwnProperty('typeName')) {
                obj['typeName'] = ApiClient.convertToType(data['typeName'], 'String');
            }
            if (data.hasOwnProperty('prefix')) {
                obj['prefix'] = ApiClient.convertToType(data['prefix'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} referenceCode
 */
AdditionalWaypoint.prototype['referenceCode'] = undefined;

/**
 * @member {String} name
 */
AdditionalWaypoint.prototype['name'] = undefined;

/**
 * @member {module:model/Coordinates} coordinates
 */
AdditionalWaypoint.prototype['coordinates'] = undefined;

/**
 * @member {String} description
 */
AdditionalWaypoint.prototype['description'] = undefined;

/**
 * @member {Number} typeId
 */
AdditionalWaypoint.prototype['typeId'] = undefined;

/**
 * @member {String} typeName
 */
AdditionalWaypoint.prototype['typeName'] = undefined;

/**
 * @member {String} prefix
 */
AdditionalWaypoint.prototype['prefix'] = undefined;

/**
 * @member {String} url
 */
AdditionalWaypoint.prototype['url'] = undefined;






export default AdditionalWaypoint;

