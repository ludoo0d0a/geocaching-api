/**
 * Geocaching API v1.0
 * Geocaching API version 1.0.
 *
 * OpenAPI spec version: v1
 * Contact: apihelp@geocaching.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.6
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Coordinates'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Coordinates'));
  } else {
    // Browser globals (root is window)
    if (!root.GeocachingApiV10) {
      root.GeocachingApiV10 = {};
    }
    root.GeocachingApiV10.AdditionalWaypoint = factory(root.GeocachingApiV10.ApiClient, root.GeocachingApiV10.Coordinates);
  }
}(this, function(ApiClient, Coordinates) {
  'use strict';




  /**
   * The AdditionalWaypoint model module.
   * @module model/AdditionalWaypoint
   * @version v1
   */

  /**
   * Constructs a new <code>AdditionalWaypoint</code>.
   * @alias module:model/AdditionalWaypoint
   * @class
   */
  var exports = function() {
    var _this = this;









  };

  /**
   * Constructs a <code>AdditionalWaypoint</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AdditionalWaypoint} obj Optional instance to populate.
   * @return {module:model/AdditionalWaypoint} The populated <code>AdditionalWaypoint</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('referenceCode')) {
        obj['referenceCode'] = ApiClient.convertToType(data['referenceCode'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('coordinates')) {
        obj['coordinates'] = Coordinates.constructFromObject(data['coordinates']);
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('typeId')) {
        obj['typeId'] = ApiClient.convertToType(data['typeId'], 'Number');
      }
      if (data.hasOwnProperty('typeName')) {
        obj['typeName'] = ApiClient.convertToType(data['typeName'], 'String');
      }
      if (data.hasOwnProperty('prefix')) {
        obj['prefix'] = ApiClient.convertToType(data['prefix'], 'String');
      }
      if (data.hasOwnProperty('url')) {
        obj['url'] = ApiClient.convertToType(data['url'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {String} referenceCode
   */
  exports.prototype['referenceCode'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {module:model/Coordinates} coordinates
   */
  exports.prototype['coordinates'] = undefined;
  /**
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * @member {Number} typeId
   */
  exports.prototype['typeId'] = undefined;
  /**
   * @member {String} typeName
   */
  exports.prototype['typeName'] = undefined;
  /**
   * @member {String} prefix
   */
  exports.prototype['prefix'] = undefined;
  /**
   * @member {String} url
   */
  exports.prototype['url'] = undefined;



  return exports;
}));


