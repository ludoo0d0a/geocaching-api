/**
 * API v1.0
 * API version 1.0.
 *
 * The version of the OpenAPI document: 1.0.0-oas3
 * Contact: apihelp@geocaching.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AdditionalWaypoint from './model/AdditionalWaypoint';
import Attribute from './model/Attribute';
import AttributeType from './model/AttributeType';
import BulkFailure from './model/BulkFailure';
import BulkResponse from './model/BulkResponse';
import Coordinates from './model/Coordinates';
import Country from './model/Country';
import FriendRequest from './model/FriendRequest';
import Geocache from './model/Geocache';
import GeocacheCount from './model/GeocacheCount';
import GeocacheLimit from './model/GeocacheLimit';
import GeocacheList from './model/GeocacheList';
import GeocacheLog from './model/GeocacheLog';
import GeocacheLogType from './model/GeocacheLogType';
import GeocacheNote from './model/GeocacheNote';
import GeocacheSize from './model/GeocacheSize';
import GeocacheType from './model/GeocacheType';
import HQPromotionMetadata from './model/HQPromotionMetadata';
import Image from './model/Image';
import ListGeocache from './model/ListGeocache';
import Location from './model/Location';
import LogDraft from './model/LogDraft';
import MembershipLevel from './model/MembershipLevel';
import PostGeocacheList from './model/PostGeocacheList';
import PostGeocacheLog from './model/PostGeocacheLog';
import PostImage from './model/PostImage';
import PostListGeocache from './model/PostListGeocache';
import PostLogDraft from './model/PostLogDraft';
import PostTrackableLog from './model/PostTrackableLog';
import PostUserWaypoint from './model/PostUserWaypoint';
import PromotedDraft from './model/PromotedDraft';
import Souvenir from './model/Souvenir';
import State from './model/State';
import Trackable from './model/Trackable';
import TrackableCount from './model/TrackableCount';
import TrackableLog from './model/TrackableLog';
import TrackableLogType from './model/TrackableLogType';
import TrackableType from './model/TrackableType';
import User from './model/User';
import UserData from './model/UserData';
import UserReference from './model/UserReference';
import UserWaypoint from './model/UserWaypoint';
import FriendsApi from './api/FriendsApi';
import GeocacheLogsApi from './api/GeocacheLogsApi';
import GeocacheNotesApi from './api/GeocacheNotesApi';
import GeocachesApi from './api/GeocachesApi';
import HQPromotionsApi from './api/HQPromotionsApi';
import ListsApi from './api/ListsApi';
import LogDraftsApi from './api/LogDraftsApi';
import ReferenceDataApi from './api/ReferenceDataApi';
import StatusApi from './api/StatusApi';
import TrackableLogsApi from './api/TrackableLogsApi';
import TrackablesApi from './api/TrackablesApi';
import UserWaypointsApi from './api/UserWaypointsApi';
import UsersApi from './api/UsersApi';
import UtilitiesApi from './api/UtilitiesApi';


/**
* API_version_1_0_.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ApiV10 = require('index'); // See note below*.
* var xxxSvc = new ApiV10.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ApiV10.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ApiV10.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ApiV10.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0-oas3
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AdditionalWaypoint model constructor.
     * @property {module:model/AdditionalWaypoint}
     */
    AdditionalWaypoint,

    /**
     * The Attribute model constructor.
     * @property {module:model/Attribute}
     */
    Attribute,

    /**
     * The AttributeType model constructor.
     * @property {module:model/AttributeType}
     */
    AttributeType,

    /**
     * The BulkFailure model constructor.
     * @property {module:model/BulkFailure}
     */
    BulkFailure,

    /**
     * The BulkResponse model constructor.
     * @property {module:model/BulkResponse}
     */
    BulkResponse,

    /**
     * The Coordinates model constructor.
     * @property {module:model/Coordinates}
     */
    Coordinates,

    /**
     * The Country model constructor.
     * @property {module:model/Country}
     */
    Country,

    /**
     * The FriendRequest model constructor.
     * @property {module:model/FriendRequest}
     */
    FriendRequest,

    /**
     * The Geocache model constructor.
     * @property {module:model/Geocache}
     */
    Geocache,

    /**
     * The GeocacheCount model constructor.
     * @property {module:model/GeocacheCount}
     */
    GeocacheCount,

    /**
     * The GeocacheLimit model constructor.
     * @property {module:model/GeocacheLimit}
     */
    GeocacheLimit,

    /**
     * The GeocacheList model constructor.
     * @property {module:model/GeocacheList}
     */
    GeocacheList,

    /**
     * The GeocacheLog model constructor.
     * @property {module:model/GeocacheLog}
     */
    GeocacheLog,

    /**
     * The GeocacheLogType model constructor.
     * @property {module:model/GeocacheLogType}
     */
    GeocacheLogType,

    /**
     * The GeocacheNote model constructor.
     * @property {module:model/GeocacheNote}
     */
    GeocacheNote,

    /**
     * The GeocacheSize model constructor.
     * @property {module:model/GeocacheSize}
     */
    GeocacheSize,

    /**
     * The GeocacheType model constructor.
     * @property {module:model/GeocacheType}
     */
    GeocacheType,

    /**
     * The HQPromotionMetadata model constructor.
     * @property {module:model/HQPromotionMetadata}
     */
    HQPromotionMetadata,

    /**
     * The Image model constructor.
     * @property {module:model/Image}
     */
    Image,

    /**
     * The ListGeocache model constructor.
     * @property {module:model/ListGeocache}
     */
    ListGeocache,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The LogDraft model constructor.
     * @property {module:model/LogDraft}
     */
    LogDraft,

    /**
     * The MembershipLevel model constructor.
     * @property {module:model/MembershipLevel}
     */
    MembershipLevel,

    /**
     * The PostGeocacheList model constructor.
     * @property {module:model/PostGeocacheList}
     */
    PostGeocacheList,

    /**
     * The PostGeocacheLog model constructor.
     * @property {module:model/PostGeocacheLog}
     */
    PostGeocacheLog,

    /**
     * The PostImage model constructor.
     * @property {module:model/PostImage}
     */
    PostImage,

    /**
     * The PostListGeocache model constructor.
     * @property {module:model/PostListGeocache}
     */
    PostListGeocache,

    /**
     * The PostLogDraft model constructor.
     * @property {module:model/PostLogDraft}
     */
    PostLogDraft,

    /**
     * The PostTrackableLog model constructor.
     * @property {module:model/PostTrackableLog}
     */
    PostTrackableLog,

    /**
     * The PostUserWaypoint model constructor.
     * @property {module:model/PostUserWaypoint}
     */
    PostUserWaypoint,

    /**
     * The PromotedDraft model constructor.
     * @property {module:model/PromotedDraft}
     */
    PromotedDraft,

    /**
     * The Souvenir model constructor.
     * @property {module:model/Souvenir}
     */
    Souvenir,

    /**
     * The State model constructor.
     * @property {module:model/State}
     */
    State,

    /**
     * The Trackable model constructor.
     * @property {module:model/Trackable}
     */
    Trackable,

    /**
     * The TrackableCount model constructor.
     * @property {module:model/TrackableCount}
     */
    TrackableCount,

    /**
     * The TrackableLog model constructor.
     * @property {module:model/TrackableLog}
     */
    TrackableLog,

    /**
     * The TrackableLogType model constructor.
     * @property {module:model/TrackableLogType}
     */
    TrackableLogType,

    /**
     * The TrackableType model constructor.
     * @property {module:model/TrackableType}
     */
    TrackableType,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserData model constructor.
     * @property {module:model/UserData}
     */
    UserData,

    /**
     * The UserReference model constructor.
     * @property {module:model/UserReference}
     */
    UserReference,

    /**
     * The UserWaypoint model constructor.
     * @property {module:model/UserWaypoint}
     */
    UserWaypoint,

    /**
    * The FriendsApi service constructor.
    * @property {module:api/FriendsApi}
    */
    FriendsApi,

    /**
    * The GeocacheLogsApi service constructor.
    * @property {module:api/GeocacheLogsApi}
    */
    GeocacheLogsApi,

    /**
    * The GeocacheNotesApi service constructor.
    * @property {module:api/GeocacheNotesApi}
    */
    GeocacheNotesApi,

    /**
    * The GeocachesApi service constructor.
    * @property {module:api/GeocachesApi}
    */
    GeocachesApi,

    /**
    * The HQPromotionsApi service constructor.
    * @property {module:api/HQPromotionsApi}
    */
    HQPromotionsApi,

    /**
    * The ListsApi service constructor.
    * @property {module:api/ListsApi}
    */
    ListsApi,

    /**
    * The LogDraftsApi service constructor.
    * @property {module:api/LogDraftsApi}
    */
    LogDraftsApi,

    /**
    * The ReferenceDataApi service constructor.
    * @property {module:api/ReferenceDataApi}
    */
    ReferenceDataApi,

    /**
    * The StatusApi service constructor.
    * @property {module:api/StatusApi}
    */
    StatusApi,

    /**
    * The TrackableLogsApi service constructor.
    * @property {module:api/TrackableLogsApi}
    */
    TrackableLogsApi,

    /**
    * The TrackablesApi service constructor.
    * @property {module:api/TrackablesApi}
    */
    TrackablesApi,

    /**
    * The UserWaypointsApi service constructor.
    * @property {module:api/UserWaypointsApi}
    */
    UserWaypointsApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi,

    /**
    * The UtilitiesApi service constructor.
    * @property {module:api/UtilitiesApi}
    */
    UtilitiesApi
};
